#!/bin/bash
#
# Description: WARNING: WORK IN PROGRESS. Updates WoW addons. Inspired by 
# https://www.reddit.com/r/bash/comments/c7shdr/ugly_bastard_son_of_a_pwsh_and_bash/
#
# Homepage: https://git.sr.ht/~krathalan/miscellaneous-scripts
#
# Copyright (C) 2019 krathalan
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# -----------------------------------------
# -------------- Guidelines ---------------
# -----------------------------------------

# This script follows the Google Shell Style Guide: 
# https://google.github.io/styleguide/shell.xml

# This script uses shellcheck: https://www.shellcheck.net/

# Clean up if script is interrupted early
trap "clean_up && kill 0" SIGINT

# See https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail

# -----------------------------------------
# ----------- Program variables -----------
# -----------------------------------------

# Colors
readonly GREEN=$(tput bold && tput setaf 2)
readonly RED=$(tput bold && tput setaf 1)
readonly NC=$(tput sgr0) # No color/turn off all tput attributes

# Other
readonly CURSE_URL="https://www.curseforge.com"
readonly ELVUI_URL="https://www.tukui.org"
readonly SCRIPT_NAME=$(basename "$0")
readonly TMP_DIR_EXTRACT="$(mktemp -d -t "${SCRIPT_NAME}_XXXXXXXX")"

# -----------------------------------------
# ------------- User variables ------------
# -----------------------------------------

# Path to the root of your WoW installation
# This is the default location if you install via Lutris
readonly PATH_TO_WOW="${HOME}/Games/world-of-warcraft"

# Whether or not to download ElvUI from https://www.tukui.org/download.php?ui=elvui
# Set to true or false
readonly INCLUDE_ELVUI="true"

# Enter the end of the URL, for example: https://www.curseforge.com/wow/addons/big-wigs
# ...would be entered as "big-wigs"
readonly ADDONS=("addonskins" "elvui-adibags" "advanced-tooltips" "altoholic" "announce-rare" "auctionlite" "auctionator" "auto-gossip" "autoturnin" "azeritetooltip" "battle_pet_breedid" "big-wigs" "bigwigs_countdown_overwatch" "project-2590" "dejacharacterstats" "details" "dialogkey" "elvui-shadow-light" "fishingbuddy" "gathermate2" "gottagofast" "islandexpeditionhelper" "jelly-deposit-locations" "litemount" "little-wigs" "long-macros" "pawn" "pettracker" "quartz" "raiderio" "rarescanner" "rematch" "rematch-elvui-skin" "simulationcraft" "tellmewhen" "tomtom" "weakauras-2" "world-quest-tracker" "xmerchant")

# Don't edit this!
readonly PATH_TO_WOW_ADDONS="${PATH_TO_WOW}/drive_c/Program Files (x86)/World of Warcraft/_retail_/Interface/AddOns"

# -----------------------------------------
# --------------- Functions ---------------
# -----------------------------------------

clean_up() 
{
  rm -rf "${TMP_DIR_EXTRACT}"
  rm -rf "${HOME}/Downloads/"*.zip
}

#######################################
# Prints passed error message before premature exit.
# Prints everything to >&2 (STDERR).
# Globals:
#   RED, NC
#   SCRIPT_NAME
# Arguments:
#   $1: error message to print
# Returns:
#   none
#######################################
exit_script_on_failure() 
{
  printf "\n%sError%s: %s\n" "${RED}" "${NC}" "$1" >&2
  printf "Exiting %s Bash script.\n" "${SCRIPT_NAME}" >&2

  exit 1
}

open_url()
{
  xdg-open "$1"
}

# -----------------------------------------
# ---------------- Script -----------------
# -----------------------------------------

if [[ "$(whoami)" = "root" ]]; then
  exit_script_on_failure "This script should NOT be run as root (or sudo)!"
fi

# Step 1
printf "\n%s==> Please ensure your ~/Downloads folder is empty.%s\n" "${GREEN}" "${NC}"
read -n 1 -s -r -p "Press any key when you are ready."

printf "\n\n%s==> Downloading addons…%s\n" "${GREEN}" "${NC}"

for addon in "${ADDONS[@]}"; do
  open_url "${CURSE_URL}/wow/addons/${addon}/download" &> /dev/null &
  sleep 1
done

if [[ "${INCLUDE_ELVUI}" == "true" ]]; then
  printf "Downloading ElvUI\n"

  # Extract download URL for latest version
  pageHTML="$(wget -qO- --show-progress "${ELVUI_URL}/download.php?ui=elvui")"
  pageHTML=$(grep -i "zip" <<< "${pageHTML}" | awk '{printf $2}')
  pageHTML=${pageHTML//\"}
  pageHTML=${pageHTML//href=}

  # Download ElvUI
  wget -q --show-progress --directory-prefix="${HOME}/Downloads" "${ELVUI_URL}${pageHTML}"
fi

read -n 1 -s -r -p "Press any key when all addons are downloaded."

# Step 2
printf "\n\n%s==> Safely unzipping to temporary folder…%s\n" "${GREEN}" "${NC}"

for addonFile in "${HOME}/Downloads"/*; do
  if [[ "${addonFile}" == *.zip ]]; then
    printf "Unzipping %s…\n" "$(basename "${addonFile}")"

    unzip "${addonFile}" -d "${TMP_DIR_EXTRACT}" > /dev/null 
  fi
done

# Step 3
printf "Done.\n\n%s==> Creating compressed backup of old addon files…%s" "${GREEN}" "${NC}"

if [[ -d "${PATH_TO_WOW_ADDONS}" ]]; then
  tar -czf "${PATH_TO_WOW_ADDONS}_old_$(date +%s).tar.gz" "${PATH_TO_WOW_ADDONS}" &> /dev/null 

  rm -rf "${PATH_TO_WOW_ADDONS}"
fi

# Step 4
printf "\nDone.\n\n%s==> Moving fresh addons to World of Warcraft directory…%s" "${GREEN}" "${NC}"

mkdir -p "${PATH_TO_WOW_ADDONS}"

mv "${TMP_DIR_EXTRACT}"/* "${PATH_TO_WOW_ADDONS}" 
clean_up

printf "\nDone.\n\n%s==> Script finished with no errors.%s\n" "${GREEN}" "${NC}"
