#!/usr/bin/env bash
#
# Description: Updates git repos in the current directory.
#
# Homepage: https://git.sr.ht/~krathalan/miscellaneous-scripts
#
# Copyright (C) 2019-2020 krathalan
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
# sed usage from https://bbs.archlinux.org/viewtopic.php?id=173653

# -----------------------------------------
# -------------- Guidelines ---------------
# -----------------------------------------

# This script follows the Google Shell Style Guide:
# https://google.github.io/styleguide/shell.xml

# This script uses shellcheck: https://www.shellcheck.net/

# See https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail

# -----------------------------------------
# ----------- Program variables -----------
# -----------------------------------------

readonly BASE_DIR="${PWD}"

# Colors
readonly PURPLE=$(tput bold && tput setaf 5)
readonly NC=$(tput sgr0) # No color/turn off all tput attributes

# Step variables
stepCounter=1
stepWithColor="${PURPLE}${stepCounter}${NC}"

# -----------------------------------------
# --------------- Functions ---------------
# -----------------------------------------

#######################################
# Prints "Done."
# Globals:
#   PURPLE, stepCounter, NC
# Arguments:
#   none
# Returns:
#   none
#######################################
print_done()
{
  stepCounter=$(( stepCounter + 1 ))
  stepWithColor="${PURPLE}${stepCounter}${NC}"
}

# -----------------------------------------
# ---------------- Script -----------------
# -----------------------------------------

printf "Updating git repos...\n\n"

for dir in "${BASE_DIR}"/*; do
  if [[ "${dir}" != *.git ]]; then
    printf "%s. Updating %s...\n" "${stepWithColor}" "${dir}"

    if [[ -d "${dir}" ]]; then
      cd "${dir}" || continue
      git pull --prune || printf "%s is not a git repository\n\n" "${dir##*/}"
      printf "\n"
    else
      printf "%s is not a directory\n\n" "${dir##*/}"
    fi

    print_done
  fi
done

printf "Done.\n"
