#!/usr/bin/env bash
#
# Description: System report script for servers
#
# Homepage: https://github.com/krathalan/miscellaneous-scripts
#
# Copyright (C) 2020 Hunter Peavey
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# -----------------------------------------
# -------------- Guidelines ---------------
# -----------------------------------------

# This script follows the Google Shell Style Guide:
# https://google.github.io/styleguide/shell.xml

# This script uses shellcheck: https://www.shellcheck.net/

# See https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail

# -----------------------------------------
# ----------- Program variables -----------
# -----------------------------------------

# Colors
GREEN=$(tput bold && tput setaf 2)
RED=$(tput bold && tput setaf 1)
WHITE=$(tput bold)
NC=$(tput sgr0) # No color/turn off all tput attributes
readonly GREEN
readonly RED
readonly WHITE
readonly NC

# Other
readonly SCRIPT_NAME="${0##*/}"

# -----------------------------------------
# ------------- User variables ------------
# -----------------------------------------

# -----------------------------------------
# --------------- Functions ---------------
# -----------------------------------------

#######################################
# Prints passed error message before premature exit.
# Prints everything to >&2 (STDERR).
# Globals:
#   RED, NC
#   SCRIPT_NAME
# Arguments:
#   $1: error message to print
# Returns:
#   none
#######################################
exit_script_on_failure()
{
  printf "%sError%s: %s\n" "${RED}" "${NC}" "$1" >&2
  exit 1
}

# -----------------------------------------
# ---------------- Script -----------------
# -----------------------------------------

printf "%sServices:\n%s" "${WHITE}" "${NC}"

services_to_check=("cloudflared" "firewalld" "jellyfin" "lighttpd" "nginx" "pihole-FTL" "syncthing@anders.service" "transmission.service")

status_to_print=""

for systemd_service in "${services_to_check[@]}"; do
  if systemctl is-active -q "${systemd_service}"; then
    status_to_print="${GREEN}online [âœ”]"
  else
    status_to_print="${RED}offline [x]"
  fi

  printf "%s: %s%s\n" "${systemd_service}" "${status_to_print}" "${NC}"
done

printf "%s\nDrives:\n%s" "${WHITE}" "${NC}"
df -h / /mnt/jellyfin/ /mnt/storage