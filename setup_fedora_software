#!/bin/bash
#
# Description: Sets up Fedora Linux with the software I use, and 
#              configures various aspects of the system to my liking.
#
# Homepage: https://gitlab.com/krathalan
#
# Copyright (C) 2019 krathalan
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
# sed usage from https://bbs.archlinux.org/viewtopic.php?id=173653

# ------------------
# --- Guidelines ---
# ------------------

# This script follows the Google Shell Style Guide: 
# https://google.github.io/styleguide/shell.xml

# This script uses shellcheck: https://www.shellcheck.net/

# See https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail

# -----------------------------
# ----- Program variables -----
# -----------------------------

readonly USER_HOME=$(eval echo ~"${SUDO_USER}")

installGamingSoftware=false

# -----------------------------------------
# --------------- Functions ---------------
# -----------------------------------------

#######################################
# Prints "Done."
# Globals:
#   none
# Arguments:
#   none
# Returns:
#   none
#######################################
print_done() {
  echo -e "Done.\n"
}

# --------------------------------------
# --------------- Script ---------------
# --------------------------------------

# Parse flags. From:
# https://stackoverflow.com/questions/7069682/how-to-get-arguments-with-flags-in-bash/7069755#7069755
while test $# -gt 0; do
  case "$1" in
    -g)
      installGamingSoftware=true;
      break
      ;;
    *)
      break
      ;;
  esac
done

# Print intro
readonly scriptName=$(basename "$0")
echo -e "Starting $scriptName BASH script; Copyright (C) 2019 krathalan"
echo -e "This is free software: you are free to change and redistribute it."
echo -e "There is NO WARRANTY, to the extent permitted by law.\n"

echo -e "This script should be run AS ROOT (or sudo)!"
read -r -p "Press enter when you are ready to continue, or <CTRL+C> to exit: "

echo -e "Removing Fedora Modular repos..."
sed -i "s#enabled=1#enabled=0#g" /etc/yum.repos.d/fedora-modular.repo
sed -i "s#enabled=1#enabled=0#g" /etc/yum.repos.d/fedora-updates-modular.repo
print_done

echo -e "Removing unused software..."
dnf remove -y cheese gedit gnome-boxes gnome-documents \
gnome-getting-started-docs gnome-initial-setup gnome-maps gnome-photos \
gnome-software gnome-user-docs gnome-weather rhythmbox simple-scan totem \
totem-plugins yelp
print_done

echo -e "Removing ABRT..."
dnf remove -y abrt*
print_done

echo -e "Installing packages from RPM..."
dnf install -y bleachbit deluge easytag epiphany evince ffmpeg firefox \
flatpak gimp git glmark2 gnome-calculator gnome-calendar gnome-clocks \
gnome-tweaks google-roboto-fonts google-roboto-mono-fonts gthumb keepassxc \
kleopatra libreoffice linux-libertine-fonts lm_sensors mosh nano neofetch \
perl-Image-ExifTool pv seahorse ShellCheck streamlink stress syncthing \
terminator vlc youtube-dl Zim zstd
print_done

echo -e "Installing Flatpaks from Flathub..."
flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
flatpak install -y flathub com.discordapp.Discord
flatpak install -y flathub org.freac.freac
flatpak install -y flathub org.gtk.Gtk3theme.Materia-dark
flatpak install -y flathub org.signal.Signal
flatpak update -y # Needed to force flatpak to install drivers and themes
print_done

# From https://github.com/balena-io/etcher#redhat-rhel-and-fedora-based-package-repository-gnulinux-x86x64
echo -e "Installing Balena Etcher..."
cd /tmp
wget https://balena.io/etcher/static/etcher-rpm.repo -O /etc/yum.repos.d/etcher-rpm.repo -q --show-progress
dnf update
dnf install -y balena-etcher-electron
print_done

# From https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo#how-to-install-for-other-distros
echo -e "Installing VSCodium..."
rpm --import https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/master/pub.gpg
dnf config-manager --add-repo https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/repos/rpms/
dnf update
dnf install -y vscodium
# Enable gpgcheck for this repo
echo -e "\ngpgcheck=1" >> "/etc/yum.repos.d/gitlab.com_paulcarroty_vscodium-deb-rpm-repo_raw_repos_rpms_.repo"
print_done

# From https://wiki.gnome.org/Apps/Lollypop
# https://copr.fedorainfracloud.org/coprs/gnumdk/lollypop/
echo -e "Installing Lollypop..."
dnf copr enable -y gnumdk/lollypop
dnf install -y lollypop
print_done

# From https://github.com/nana-4/materia-theme#installation
# https://copr.fedorainfracloud.org/coprs/tcg/themes/
echo -e "Installing Materia theme..."
dnf copr enable -y tcg/themes
dnf install -y materia-theme
print_done

# From https://github.com/PapirusDevelopmentTeam/papirus-icon-theme#papirus-installer
# https://copr.fedorainfracloud.org/coprs/dirkdavidis/papirus-icon-theme/
echo -e "Installing Papirus icons..."
dnf copr enable -y dirkdavidis/papirus-icon-theme
dnf install -y papirus-icon-theme
print_done

# From https://copr.fedorainfracloud.org/coprs/dirkdavidis/papirus-libreoffice-theme/
# The package is misnamed in the "Installation Instructions". If you open the Packages
# tab, the only package available is libreoffice-style-papirus
echo -e "Installing Papirus LibreOffice theme..."
dnf copr enable -y dirkdavidis/papirus-libreoffice-theme
dnf install -y libreoffice-style-papirus
print_done

if [ "$installGamingSoftware" = true ]; then
  echo -e "Setting up Lutris gaming environment..."
  dnf install -y lutris
  dnf install -y gnutls gnutls-devel openldap openldap-devel libgpg-error sqlite2.i686 sqlite2.x86_64 # Install Battle.net dependencies https://github.com/lutris/lutris/wiki/Game:-Blizzard-App

  echo -e "Installing WINE..."
  dnf install -y wine
  print_done

  echo -e "Installing Minecraft..."
  wget https://launcher.mojang.com/download/Minecraft.tar.gz --directory-prefix=/opt -q --show-progress
  tar -xf Minecraft.tar.gz
  rm -f Minecraft.tar.gz
fi

# From https://bbs.archlinux.org/viewtopic.php?id=173653
echo -e "Adding .gif thumbnails to GNOME Files (Nautilus)..."
dnf install -y ffmpegthumbnailer
sed -i "s#MimeType=#MimeType=image/gif;#" /usr/share/thumbnailers/ffmpegthumbnailer.thumbnailer
rm -rf "$USER_HOME/.cache/thumbnails"
print_done

echo -e "Setting up secure_path in /etc/sudoers..."
sed -i "s#/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin#/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$USER_HOME/.local/bin#" /etc/sudoers
print_done

echo -e "Making Qt apps look like your GTK+ theme..."
dnf install -y qt5-qtstyleplugins
echo -e "\nQT_QPA_PLATFORMTHEME=gtk2" >> /etc/environment
print_done

echo -e "Reboot your computer now!"

echo -e "You still need to:"
echo -e "- VSCodium"
echo -e "  - Install ShellCheck, Material Basic, and Material Icon Theme extensions"
echo -e "  - Copy settings"
echo -e "- Read README.txt in this directory"
