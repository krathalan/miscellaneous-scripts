#!/usr/bin/env bash
#
# Description:
#
# Homepage: https://git.sr.ht/~krathalan/miscellaneous-scripts
#
# Copyright (C) 2020 krathalan
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# -----------------------------------------
# -------------- Guidelines ---------------
# -----------------------------------------

# This script follows the Google Shell Style Guide:
# https://google.github.io/styleguide/shell.xml

# This script uses shellcheck: https://www.shellcheck.net/

# See https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuxo pipefail

# -----------------------------------------
# ----------- Program variables -----------
# -----------------------------------------

# Colors
readonly RED=$(tput bold && tput setaf 1)
readonly NC=$(tput sgr0) # No color/turn off all tput attributes

# Other
readonly SCRIPT_NAME="${0##*/}"
readonly DROPBOX_PATH="/home/admin/package-dropbox"
readonly REPO_ROOT="/var/www/builds/x86_64"

# -----------------------------------------
# ------------- User variables ------------
# -----------------------------------------

# -----------------------------------------
# --------------- Functions ---------------
# -----------------------------------------

add_packages()
{
  # Wait for the package to get here (rsync)...
  # We have to check to make sure that all files in the directory
  # end in .pkg.tar.zst or .pkg.tar.zst.sig
  local check_files=("${DROPBOX_PATH}"/*)
  local check_passed="false"

  while [[ "${check_passed}" == "false" ]]; do
    check_passed="true"

    for file in "${check_files[@]}"; do
      if [[ "${file}" != *".pkg.tar.zst" ]] || [[ "${file}" != *".pkg.tar.zst.sig" ]]; then
        check_passed="false"
      fi
    done

    # Refresh data and take a lil nap :)
    local check_files=("${DROPBOX_PATH}"/*)
    sleep 7
  done

  # Check for empty files using arrays
  local -r chk_files=("${DROPBOX_PATH}"/*)
  [[ "${#chk_files[@]}" -eq 0 ]] && return

  (
  cd "${REPO_ROOT}" || exit_script_on_failure "Failure to \`cd\` into ${REPO_ROOT}"

  for package in "${DROPBOX_PATH}"/*.pkg.tar.zst; do
    mv "${package}" "${package}.sig" .
    chown root:root "${package##${DROPBOX_PATH}/}" "${package##${DROPBOX_PATH}/}.sig"
    repo-add -R -n krathalan.db.tar "${package##${DROPBOX_PATH}/}"
  done
  )
}

#######################################
# Prints passed error message before premature exit.
# Prints everything to >&2 (STDERR).
# Globals:
#   RED, NC
#   SCRIPT_NAME
# Arguments:
#   $1: error message to print
# Returns:
#   none
#######################################
exit_script_on_failure()
{
  printf "%sError%s: %s\n" "${RED}" "${NC}" "$1" >&2

  exit 1
}

# -----------------------------------------
# ---------------- Script -----------------
# -----------------------------------------

while inotifywait -re modify "${DROPBOX_PATH}"; do
  add_packages
done
